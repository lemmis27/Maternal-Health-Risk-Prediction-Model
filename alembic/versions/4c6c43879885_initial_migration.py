"""Initial migration

Revision ID: 4c6c43879885
Revises: 
Create Date: 2025-07-11 16:46:51.623860

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from datetime import datetime, timezone


# revision identifiers, used by Alembic.
revision: str = '4c6c43879885'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('PREGNANT_MOTHER', 'CHV', 'CLINICIAN', 'POLICYMAKER', name='userroleenum'), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('pregnant_mothers',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('gestational_age', sa.Integer(), nullable=True),
    sa.Column('previous_pregnancies', sa.Integer(), nullable=True),
    sa.Column('previous_complications', sa.Text(), nullable=True),
    sa.Column('emergency_contact', sa.String(), nullable=False),
    sa.Column('assigned_chv_id', sa.String(), nullable=True),
    sa.Column('assigned_clinician_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_chv_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['assigned_clinician_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pregnant_mothers_id'), 'pregnant_mothers', ['id'], unique=False)
    op.create_table('appointments',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('mother_id', sa.String(), nullable=False),
    sa.Column('clinician_id', sa.String(), nullable=False),
    sa.Column('chv_id', sa.String(), nullable=True),
    sa.Column('appointment_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('SCHEDULED', 'CONFIRMED', 'COMPLETED', 'CANCELLED', name='appointmentstatusenum'), nullable=True),
    sa.Column('reason', sa.String(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['chv_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['clinician_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['mother_id'], ['pregnant_mothers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appointments_id'), 'appointments', ['id'], unique=False)
    op.create_table('medications',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('mother_id', sa.String(), nullable=False),
    sa.Column('clinician_id', sa.String(), nullable=False),
    sa.Column('medication_name', sa.String(), nullable=False),
    sa.Column('dosage', sa.String(), nullable=False),
    sa.Column('frequency', sa.String(), nullable=False),
    sa.Column('duration', sa.String(), nullable=False),
    sa.Column('instructions', sa.Text(), nullable=False),
    sa.Column('prescribed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['clinician_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['mother_id'], ['pregnant_mothers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_medications_id'), 'medications', ['id'], unique=False)
    op.create_table('risk_assessments',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('mother_id', sa.String(), nullable=False),
    sa.Column('chv_id', sa.String(), nullable=False),
    sa.Column('assessment_date', sa.DateTime(), nullable=True),
    sa.Column('age', sa.Float(), nullable=False),
    sa.Column('systolic_bp', sa.Float(), nullable=False),
    sa.Column('diastolic_bp', sa.Float(), nullable=False),
    sa.Column('blood_sugar', sa.Float(), nullable=False),
    sa.Column('body_temp', sa.Float(), nullable=False),
    sa.Column('heart_rate', sa.Integer(), nullable=False),
    sa.Column('gestational_age', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('height', sa.Float(), nullable=False),
    sa.Column('symptoms', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('bmi', sa.Float(), nullable=True),
    sa.Column('risk_level', sa.Enum('LOW', 'MEDIUM', 'HIGH', name='risklevelenum'), nullable=True),
    sa.Column('risk_score', sa.Float(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('recommendations', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['chv_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['mother_id'], ['pregnant_mothers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_risk_assessments_id'), 'risk_assessments', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_risk_assessments_id'), table_name='risk_assessments')
    op.drop_table('risk_assessments')
    op.drop_index(op.f('ix_medications_id'), table_name='medications')
    op.drop_table('medications')
    op.drop_index(op.f('ix_appointments_id'), table_name='appointments')
    op.drop_table('appointments')
    op.drop_index(op.f('ix_pregnant_mothers_id'), table_name='pregnant_mothers')
    op.drop_table('pregnant_mothers')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
